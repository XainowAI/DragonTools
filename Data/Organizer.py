import requests
from ipinfo import getHandler
import os 
import subprocess
from colorama import Fore
access_token = "3bb2549065e1aa"  # Replace with your actual ipinfo.io access token
handler = getHandler(access_token)

def input_with_default(prompt, default="Inconnu"):
    user_input = input(prompt)
    return user_input if user_input.strip() != "" else default

def generate_dox_info(victim, age, photo_links, entreprise, raison, networks, coordinates, other_info, parents_info, internet_info, phone_info, ip_info):
    result = f"ğŸ“‚ - Informations Dox\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Dox par Dev'ToyaÂ®\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Entreprise du Dox : {entreprise}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - Raison : {raison}\nâ”‚\n"

    result += f"ğŸ“‚ - {victim}\n"
    result += "â”‚\n"

    result += "â”œâ”€â”€ ğŸ“‚ - RÃ©seaux sociaux\n"
    for network, username in networks.items():
        result += f"â”‚   â”œâ”€â”€ ğŸ“„ - {network.capitalize()} : {username}\n"

    result += f"â”‚\n"
    result += f"â”œâ”€â”€ ğŸ“‚ - CoordonnÃ©es\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - NumÃ©ro de tÃ©lÃ©phone : {coordinates['phone_num']}\n"
    result += f"â”‚   â”‚   â”œâ”€â”€ ğŸ“„ - OpÃ©rateur : {coordinates['operator']}\n"
    result += f"â”‚   â”‚   â””â”€â”€ ğŸ“„ - Type : {coordinates['type']}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - Adresse : {coordinates['address']}\nâ”‚\n"

    result += f"â”œâ”€â”€ ğŸ“‚ - Autres informations\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Ã‚ge : {age}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Date de naissance : {other_info['date_of_birth']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Signe astrologique : {other_info['zodiac_sign']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Ville : {other_info['city']}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - Pays : {other_info['country']}\nâ”‚\n"

    result += f"â”œâ”€â”€ ğŸ“‚ - Photos personnelles\n"
    for i, photo_link in enumerate(photo_links, start=1):
        result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Photo {i} : {photo_link}\nâ”‚\n"

    result += "â””â”€â”€ ğŸ“‚ - Parents informations\n"
    result += f"    â”œâ”€â”€ ğŸ“„ - PÃ¨re : {parents_info['father']}\n"
    result += f"    â””â”€â”€ ğŸ“„ - MÃ¨re : {parents_info['mother']}\n"

    result += f"\nğŸ“‚ - Informations Internet\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Date : {internet_info['date']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Fournisseur d'accÃ¨s Internet (FAI) : {internet_info['fai']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Useragent : {internet_info['useragent']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Adresse IP : {internet_info['ip_address']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Pays : {internet_info['country']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Ville : {internet_info['city']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Ã‰tat : {internet_info['state']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Latitude : {internet_info['latitude']}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - Longitude : {internet_info['longitude']}\n\n"

    result += f"ğŸ“‚ - Informations du tÃ©lÃ©phone\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Navigateur : {phone_info['browser']}\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - Plateforme : {phone_info['platform']}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - TÃ©lÃ©phone: {phone_info['phone_brand']}\n\n"

    result += f"ğŸ“‚ - Informations de l'IP\n"
    result += f"â”‚   â”œâ”€â”€ ğŸ“„ - IP: {ip_info.ip}\n"
    result += f"â”‚   â””â”€â”€ ğŸ“„ - Info:\n"
    result += f"â”‚       â”œâ”€â”€ ğŸ“„ - Ville: {ip_info.city}\n"
    result += f"â”‚       â”œâ”€â”€ ğŸ“„ - RÃ©gion: {ip_info.region}\n"
    result += f"â”‚       â”œâ”€â”€ ğŸ“„ - Pays: {ip_info.country}\n"
    result += f"â”‚       â””â”€â”€ ğŸ“„ - Localisation: {ip_info.loc}\n"

    return result

# Fetch IP information
ip_address = input("Enter an IP address: ")
ip_info = handler.getDetails(ip_address)

# Collect victim information
victim = input("Victime: ")
age = input_with_default("Ã‚ge: ")
photo_links = input("Photo links (sÃ©parÃ©s par des virgules): ").split(", ")
entreprise = input_with_default("Entreprise du Dox: ")
raison = input("Raison du Dox: ")

networks = {
    "Discord": input_with_default("Discord: "),
    "Facebook": input_with_default("Facebook: "),
    "Snapchat": input_with_default("Snapchat: "),
    "Instagram": input_with_default("Instagram: "),
    # Ajouter d'autres rÃ©seaux sociaux au besoin
}

phone_num = input("NumÃ©ro de tÃ©lÃ©phone: ")
operator = input_with_default("OpÃ©rateur: ")
phone_type = input_with_default("Type de tÃ©lÃ©phone: ")
address = input_with_default("Adresse: ")

coordinates = {
    "phone_num": phone_num,
    "operator": operator,
    "type": phone_type,
    "address": address,
}

date_of_birth = input("Date de naissance: ")
zodiac_sign = input_with_default("Signe astrologique: ")
city = input_with_default("Ville: ")
country = input_with_default("Pays: ")

other_info = {
    "date_of_birth": date_of_birth,
    "zodiac_sign": zodiac_sign,
    "city": city,
    "country": country,
}

# Ajouter d'autres informations au besoin

photo_links = input("Liens des photos personnelles (sÃ©parÃ©s par des virgules): ").split(", ")

father = input_with_default("PÃ¨re: ")
mother = input_with_default("MÃ¨re: ")

parents_info = {
    "father": father,
    "mother": mother,
}

internet_info = {
    "date": input_with_default("Date: "),
    "fai": input_with_default("Fournisseur d'accÃ¨s Internet (FAI): "),
    "useragent": input_with_default("Useragent: "),
    "ip_address": input_with_default("Adresse IP: "),
    "country": input_with_default("Pays: "),
    "city": input_with_default("Ville: "),
    "state": input_with_default("Ã‰tat: "),
    "latitude": input_with_default("Latitude: "),
    "longitude": input_with_default("Longitude: "),
}

phone_info = {
    "browser": input_with_default("Navigateur: "),
    "platform": input_with_default("Plateforme: "),
    "phone_brand": input_with_default("TÃ©lÃ©phone: "),
}

dox_info = generate_dox_info(victim, age, photo_links, entreprise, raison, networks, coordinates, other_info, parents_info, internet_info, phone_info, ip_info)
os.system('cls')
print(dox_info)
print("""\n
""")
input("Press enter for exit...")
dragon_tools_path = os.path.expanduser(r'c:\Program Files\DragonTools/DragonTools-main.exe')
subprocess.run(['python', dragon_tools_path], shell=True)